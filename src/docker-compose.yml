version: '3.9'
name: 'streamelements-store-notifier'

services:
  db:
    image: postgres:latest
    container_name: postgres
    hostname: db
    restart: always
    command: 'postgres -c max_connections=100 -c shared_buffers=256MB'
    environment:
      - POSTGRES_PASSWORD=api
      - POSTGRES_USER=api
      - POSTGRES_DB=StreamelementsStoreNotifier
    ports:
      - "5432:5432"
    volumes:
      - ./ddl.sql:/docker-entrypoint-initdb.d/ddl.sql:ro
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '1024MB'
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U api -d StreamelementsStoreNotifier'"
        ]
      interval: 10s
      retries: 3
      timeout: 1s
      start_period: 10s

  api:
    image: luanh01/streamelements-store-notifier:latest
    container_name: api
    hostname: api
    restart: always
    environment:
      - ASPNETCORE_URLS=http://+:9999
      - ASPNETCORE_ENVIRONMENT=Production
      - AllowedHosts=*
      - ConnectionStrings__Database=YOUR_CONNECTION_STRING
      - Logging__LogLevel__Default=Information
      - Mailing__ApiKey=YOUR_API_KEY
      - Mailing__SenderAddress=YOUR_EMAIL
      - Mailing__ReceiverAddress=YOUR_EMAIL
      - StreamElements__AccessToken=YOUR_ACCESS_TOKEN
    ports:
      - "9999:9999"
    expose:
      - 9999
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: '256MB'
    networks:
      - app-network
    healthcheck:
      test: curl -o /dev/null -fs --retry 0 --head http://localhost:9999/health || exit 1
      interval: 10s
      retries: 3
      timeout: 1s
      start_period: 5s

networks:
  app-network:
